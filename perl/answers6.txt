5) Add a checkbox to the form (such as "Do you want milk? Yes/No") and a 
text area where customers can type in what kind of cake they would like to 
order. Change your cgi script so that it includes these in its reply, such 
as "you requested tea with milk", "sorry we are out of chocolate cake". The 
checkbox and text area must have distinct names in the form. Their 
parameters are retrieved in the cgi file by using the "param()" function. 

#!/usr/bin/perl -Tw
use CGI qw(:standard);

print header();
print "<html>
<head>
<title> Tea is served</title>
</head>
<body>
<hr><h1> Tea</h1><hr>
<p>";

my $drink = param("drink");
my $milk = param("milk");
my $cake = param("cake");

if ($drink eq "tea") {print "You requested tea";}
elsif ($drink eq "coffee"){print "You requested coffee";}
elsif ($drink eq "hot chocolate"){print "You requested hot chocolate";}
else {print "An error occured.";}

if ($milk eq "yes") {print " with milk";}
print ".<br>";

if ($cake) {print "Sorry, we are out of $cake."}

print " 
<p>
Thank you for your visit. Please come again. 
<p>
<hr>
</body>
</html>
";

7) Write an HTML file that does not contain a form but contains three 
links that send URLs with attached parameters "tea", "coffee", "hot 
chocolate" to the cgi file. 

<html>
<head>
<title>File that connects to a CGI program</title>
</head>
<body>

<h3>What would you like to drink?</h3>

<a href="http://shakti.lib.indiana.edu/~upriss/cgi/example1?drink=tea">
Tea</a>
<br>
<a href="http://shakti.lib.indiana.edu/~upriss/cgi/example1?drink=coffee">
Coffee</a>
<br>
<a href="http://shakti.lib.indiana.edu/~upriss/cgi/example1?drink=hot+chocolate">
Hot Chocolate</a>


</body>